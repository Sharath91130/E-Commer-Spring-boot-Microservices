package com.ecommerce.microservice.Controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ecommerce.microservice.Entity.Order;
import com.ecommerce.microservice.Service.OrderService;
import com.ecommerce.microservice.Service.ProductClient;

import lombok.Data;

@RestController
@RequestMapping("/order")

public class OrderController {
	
	private final OrderService orderService;
	private final ProductClient client;
	
	public OrderController(OrderService orderService, ProductClient client) {
		
		this.orderService = orderService;
		this.client = client;
	}


	@PostMapping("/save")
	public Order save(@RequestBody Order order) {
	orderService.save(order);
	return order;
	}
	@GetMapping("/getByUser/{id}")
	public Map<String ,Object> getByUserId(@PathVariable  Integer id){
		
		List<Order> orders=orderService.getByUserId(id);
		Map<String,Object> product=new  HashMap<>();
		
		
		for(Order o :orders) {
			product.put("Order", client.getProduct(o.getProduct()));
			
		}
		
return product;
	}

	@GetMapping("/get/{id}")
	public Map<String, Object> get(@PathVariable  Integer id) {
		Order o=orderService.getByOrder(id);
		
		
		
		Map<String ,Object> product=client.getProduct(o.getProduct());
		
		product.put("Order", o);
		
		
		return product;
		
		
	}
}
